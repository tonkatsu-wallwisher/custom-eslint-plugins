{
  // Place your custom-eslint-plugins workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  // "Print to console": {
  // 	"scope": "javascript,typescript",
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }
  "Custom ESLint plugin": {
    "scope": "javascript",
    "prefix": "plugin",
    "body": [
      "/** @type {import('eslint').Rule.RuleModule} */",
      "const ${TM_FILENAME_BASE/-([a-z])/${1:/capitalize}/g} = {",
      "\tmeta: {",
      "\t\ttype: 'suggestion',",
      "\t\tdocs: {",
      "\t\t\tdescription: 'Skeleton for custom ESLint plugin',",
      "\t\t},",
      "\t\tfixable: 'code',",
      "\t\thasSuggestions: true,",
      "\t\tschema: [],",
      "\t},",
      "\tcreate(context) {",
      "\t\treturn {",
      "\t\t\t${1:Program}(node) {",
      "\t\t\t},",
      "\t\t}",
      "\t}",
      "}",
      "",
      "export default {",
      "  '${TM_FILENAME_BASE}': ${TM_FILENAME_BASE/-([a-z])/${1:/capitalize}/g}",
      "}",
    ],
    "description": "Skeleton for custom ESLint plugin",
  },

  "ESLint plugin context report": {
    "scope": "javascript",
    "prefix": "report",
    "body": [
      "context.report({",
      "\tnode: ${1:node},",
      "\tmessage: '${2:Why is it bad?}',",
      "\tsuggest: [",
      "\t\t{",
      "\t\t\tdesc: '${3:What the fix will do.}',",
      "\t\t\tfix(fixer) {",
      "\t\t\t\treturn fixer.replaceText(${1:node}, `${0:fixed code}`)",
      "\t\t\t},",
      "\t\t},",
      "\t],",
      "})",
    ],
    "description": "Report a problem in ESLint plugin context",
  },
}
